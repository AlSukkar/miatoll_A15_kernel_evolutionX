name: Integrate SUSFS into Kernel Repo

on:
  workflow_dispatch:

jobs:
  integrate-susfs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout kernel vic branch
        uses: actions/checkout@v4
        with:
          repository: AlSukkar/kernel_xiaomi_sm6250
          ref: vic
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "AlSukkar"
          git config user.email "alsukkar@users.noreply.github.com"
      
      - name: Remove existing KernelSU-Next (submodule reference)
        run: |
          git rm -rf KernelSU-Next 2>/dev/null || rm -rf KernelSU-Next
          git commit -m "Remove KernelSU-Next submodule reference" || echo "Nothing to remove"
          git push origin vic || echo "Nothing to push yet"
      
      - name: Setup fresh KernelSU-Next v1.1.1
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s v1.1.1
      
      - name: Remove .git folder from KernelSU-Next (CRITICAL)
        run: |
          rm -rf KernelSU-Next/.git
          echo "✅ Removed .git folder - KernelSU-Next is now a regular directory"
      
      - name: Apply SUSFS v1.5.3 patch to KernelSU-Next
        run: |
          cd KernelSU-Next/
          curl -o susfs.patch https://github.com/sidex15/KernelSU-Next/commit/1e750de25930e875612bbec0410de0088474c00b.patch
          
          # Apply patch with error handling
          if patch -p1 < susfs.patch; then
            echo "✅ SUSFS patch applied successfully"
          else
            echo "⚠️ Patch had conflicts, checking critical files..."
            if [ -f "kernel/sucompat.c" ]; then
              echo "✅ Critical SUSFS files present"
            else
              echo "❌ Patch failed critically"
              exit 1
            fi
          fi
          
          rm susfs.patch
          cd ..
      
      - name: Verify KernelSU-Next contents
        run: |
          echo "📁 KernelSU-Next directory contents:"
          ls -la KernelSU-Next/kernel/ | head -20
          
          echo ""
          echo "🔍 Checking for SUSFS files in KernelSU-Next:"
          find KernelSU-Next -name "*susfs*" -o -name "*sucompat*" | head -10
      
      - name: Clone SUSFS kernel 4.14 patches
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b kernel-4.14 susfs4ksu
      
      - name: Copy SUSFS kernel source files
        run: |
          echo "📁 Copying SUSFS kernel patches..."
          
          # Create directories if they don't exist
          mkdir -p fs include/linux
          
          # Copy fs patches
          if [ -d "susfs4ksu/kernel_patches/fs" ]; then
            cp -v susfs4ksu/kernel_patches/fs/* fs/ 2>&1 | grep -E "susfs|sus_su"
          fi
          
          # Copy include patches
          if [ -d "susfs4ksu/kernel_patches/include/linux" ]; then
            cp -v susfs4ksu/kernel_patches/include/linux/* include/linux/ 2>&1 | grep -E "susfs|sus_su"
          fi
      
      - name: Apply main SUSFS kernel patch
        run: |
          if [ -f "susfs4ksu/kernel_patches/50_add_susfs_in_kernel-4.14.patch" ]; then
            cp susfs4ksu/kernel_patches/50_add_susfs_in_kernel-4.14.patch .
            
            echo "🔧 Applying SUSFS kernel patch..."
            if patch -p1 --forward < 50_add_susfs_in_kernel-4.14.patch; then
              echo "✅ Kernel patch applied successfully"
            else
              echo "⚠️ Patch had rejections, continuing..."
            fi
            
            rm 50_add_susfs_in_kernel-4.14.patch
          fi
          
          # Clean up reject files
          find . -name "*.rej" -delete
          find . -name "*.orig" -delete
      
      - name: Cleanup temporary files
        run: |
          rm -rf susfs4ksu
      
      - name: Final integration check
        run: |
          echo "📊 SUSFS Integration Summary:"
          echo "================================"
          
          # Check KernelSU-Next
          if [ -d "KernelSU-Next" ] && [ ! -d "KernelSU-Next/.git" ]; then
            echo "✅ KernelSU-Next v1.1.1 (as regular directory)"
          else
            echo "❌ KernelSU-Next issue detected"
          fi
          
          # Check SUSFS in KernelSU-Next
          if [ -f "KernelSU-Next/kernel/sucompat.c" ]; then
            echo "✅ SUSFS integrated in KernelSU-Next"
          else
            echo "⚠️ SUSFS may not be in KernelSU-Next"
          fi
          
          # Check kernel patches
          [ -f "fs/susfs.c" ] && echo "✅ fs/susfs.c present" || echo "⚠️ fs/susfs.c missing"
          [ -f "fs/sus_su.c" ] && echo "✅ fs/sus_su.c present" || echo "⚠️ fs/sus_su.c missing"
          [ -f "include/linux/susfs.h" ] && echo "✅ include/linux/susfs.h present" || echo "⚠️ include/linux/susfs.h missing"
          
          echo "================================"
          echo ""
          echo "📝 Files added:"
          git status --short | grep "^A" || echo "No new files"
      
      - name: Commit all changes
        run: |
          # Add all files as regular files (not submodules)
          git add -A
          
          if git diff --staged --quiet; then
            echo "⚠️ No changes to commit"
            exit 1
          fi
          
          git commit -m "Integrate KernelSU-Next v1.1.1 with SUSFS v1.5.3 for kernel 4.14

          - Added KernelSU-Next v1.1.1 as regular directory (not submodule)
          - Integrated SUSFS v1.5.3 patches into KernelSU-Next
          - Added SUSFS kernel patches for 4.14:
            * fs/susfs.c and fs/sus_su.c
            * include/linux/susfs.h, sus_su.h, susfs_def.h
          - Applied 50_add_susfs_in_kernel-4.14.patch"
          
          echo "✅ Changes committed successfully"
      
      - name: Push to vic branch
        run: |
          git push origin vic
          echo "✅ Successfully pushed to vic branch"
