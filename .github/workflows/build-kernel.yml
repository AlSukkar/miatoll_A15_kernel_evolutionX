name: Build Evolution-X Kernel with KernelSU Next + SUSFS

on:
  workflow_dispatch:
    inputs:
      kernelsu_version:
        description: 'KernelSU Next Version'
        required: false
        default: 'v1.1.1'
      kernel_branch:
        description: 'Kernel Branch'
        required: false
        default: 'bka'
      force_build:
        description: 'Force build even if no changes detected'
        required: false
        default: false
        type: boolean

env:
  KERNEL_REPO: "https://github.com/Evolution-X-Devices/kernel_xiaomi_sm6250"
  DOCKER_IMAGE: "ghcr.io/tedomi2705/kernel_builder_image:latest"
  BUILD_DIR: out

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Get Current Date
      id: date
      run: |
        echo "date=$(date +'%Y%m%d_%H%M')" >> $GITHUB_OUTPUT
        echo "readable_date=$(date +'%Y-%m-%d %H:%M UTC')" >> $GITHUB_OUTPUT

    - name: Set Build Variables
      run: |
        echo "KSU_VERSION=${{ github.event.inputs.kernelsu_version || 'v1.0.5' }}" >> $GITHUB_ENV
        echo "KERNEL_BRANCH=${{ github.event.inputs.kernel_branch || 'bka' }}" >> $GITHUB_ENV
        echo "FORCE_BUILD=${{ github.event.inputs.force_build || 'false' }}" >> $GITHUB_ENV

    - name: Restore kernel build cache
      uses: actions/cache@v3
      with:
        path: |
          out/
          .ccache/
        key: kernel-${{ env.KERNEL_BRANCH }}-${{ github.event.inputs.kernelsu_version }}-${{ github.sha }}
        restore-keys: |
          kernel-${{ env.KERNEL_BRANCH }}-${{ github.event.inputs.kernelsu_version }}-
          kernel-${{ env.KERNEL_BRANCH }}-
          kernel-

    - name: Clone Kernel Source
      run: |
        if [ ! -d "kernel_source" ]; then
          echo "📥 Cloning kernel source..."
          git clone --depth=1 --branch=$KERNEL_BRANCH $KERNEL_REPO kernel_source
        fi
        cd kernel_source
        echo "📊 Kernel version: $(make kernelversion)"
        echo "📊 Commit: $(git rev-parse --short HEAD)"

    - name: Prepare Build Scripts
      run: |
        chmod +x scripts/integrate_kernel.sh
        chmod +x scripts/create_anykernel.sh

    - name: Build Kernel in Docker
      run: |
        echo "🔧 Starting kernel build in Docker container..."
        docker run --rm \
          -v "$PWD:/workspace" \
          -w /workspace \
          -v "$PWD/.ccache:/root/.ccache" \
          -e KSU_VERSION="$KSU_VERSION" \
          -e CCACHE_DIR="/root/.ccache" \
          $DOCKER_IMAGE \
          bash scripts/integrate_kernel.sh

    - name: Create AnyKernel3 ZIP
      run: |
        echo "📦 Creating AnyKernel3 flashable ZIP..."
        bash scripts/create_anykernel.sh "$KSU_VERSION" "${{ steps.date.outputs.date }}"

    - name: Verify Build Output
      run: |
        echo "🔍 Verifying build output..."
        KERNEL_IMG="out/arch/arm64/boot/Image.gz-dtb"
        if [ -f "$KERNEL_IMG" ] && [ -f "output"/*.zip ]; then
          echo "✅ Build successful!"
          echo "📦 Files created:"
          ls -la output/
        else
          echo "❌ Build verification failed!"
          exit 1
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "kernel-${{ steps.date.outputs.date }}"
        name: "Evolution-X Kernel with KernelSU Next + SUSFS (${{ steps.date.outputs.readable_date }})"
        body: |
          ## Evolution-X Kernel Build
          
          **🎯 Target Device:** Xiaomi SM6250 (miatoll)  
          **📅 Build Date:** ${{ steps.date.outputs.readable_date }}  
          **🔧 KernelSU Version:** ${{ env.KSU_VERSION }}  
          **🌿 Kernel Branch:** ${{ env.KERNEL_BRANCH }}  
          
          ### ✨ Features
          - ✅ KernelSU Next integrated
          - ✅ SUSFS (SU hiding) integrated  
          - ✅ Evolution-X optimizations
          - ✅ Built with latest toolchain
          
          ### 📱 Compatible Devices
          - Redmi Note 9S (curtana/miatoll)
          - Redmi Note 9 Pro (joyeuse/miatoll)
          - Redmi Note 9 Pro Max (excalibur/miatoll)
          - Poco M2 Pro (gram/miatoll)
          
          ### 📥 Installation
          
          **🔥 AnyKernel3 ZIP (Recommended):**
          1. Download the `.zip` file below
          2. Boot into TWRP recovery
          3. Flash the ZIP
          4. Reboot and install KernelSU Next manager app
          
          **⚡ Raw Image (Advanced):**
          1. Download `Image.gz-dtb` below  
          2. Use fastboot: `fastboot flash boot Image.gz-dtb`
          
          ### ⚠️ Important Notes
          - Requires Evolution-X ROM
          - Always backup your current kernel
          - Use at your own risk
          
          ---
          *Built automatically by GitHub Actions* 🤖
        files: |
          output/*.zip
          output/Image.gz-dtb
          output/INSTALLATION.txt
          output/build.log
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Evolution-X-Kernel-KernelSU-SUSFS-${{ steps.date.outputs.date }}
        path: output/
        retention-days: 30

    - name: Build Summary
      run: |
        echo "🎉 Build completed successfully!"
        echo "📦 Download from Releases or Artifacts"
        echo "🔥 AnyKernel3 ZIP ready for TWRP flashing"
